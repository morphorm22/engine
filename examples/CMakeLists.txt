if(ANALYZE)
  if(NOT DEFINED ANALYZE_BINARY)
    if(NOT DEFINED ANALYZE_PATH)
      message(FATAL_ERROR "
       Analyze tests are enabled, but both ANALYZE_BINARY and ANALYZE_PATH are not set.
       One must be defined in order to enable Analyze tests.")
    endif()
    Plato_find_exe(ANALYZE_BINARY analyze_MPMD ${ANALYZE_PATH})
    if(NOT DEFINED ANALYZE_BINARY)
      message(FATAL_ERROR "
       analyze_MPMD was not found in ${ANALYZE_PATH}")
    endif()
    message("-- Adding Analyze tests")
    message("-- Analyze MPMD executable: " ${ANALYZE_BINARY})
    message("-- ")
  else()
    message("-- ANALYZE_BINARY variable already set")
    message(STATUS "Using ${ANALYZE_BINARY}")
  endif()
endif()

IF( ANALYZE )

  IF( STK_ENABLED )
    add_subdirectory(Analyze_CompMin3D_Restart_OC)
  ENDIF()

  add_subdirectory(Analyze_MassProp3D_MMA)
  add_subdirectory(Analyze_CompMin2D_OC)
  add_subdirectory(Analyze_CompMin3D_2Load_OC)
  add_subdirectory(Analyze_CompMin3D_MultiBlock_OC)
  add_subdirectory(Analyze_CompMin3D_Orthotropic_OC)
  add_subdirectory(Analyze_CompMin3D_2_constraints_KSAL)
  add_subdirectory(Analyze_CompMin3D_2Loads_1Performer_OC)
  add_subdirectory(Analyze_DisplacementCriterion_MMA)
  add_subdirectory(Analyze_FixedBlocks_NoEnforceBounds_OC)
  add_subdirectory(Analyze_FixedBlocks_DefaultEnforceBounds_OC)
  add_subdirectory(Analyze_Helmholtz3D_Projection_OC)
  add_subdirectory(Analyze_Helmholtz3D_SurfaceLengthScale_OC)
  add_subdirectory(Analyze_Helmholtz3D_SurfaceLengthScale_SymmPlane_OC)
  add_subdirectory(Analyze_Uncertain_Load_OC)
  add_subdirectory(Analyze_MPCs_Helmholtz_OC)
  add_subdirectory(Analyze_Thermoplasticity)
  add_subdirectory(Analyze_Thermal_Opt_MMA)
  add_subdirectory(Analyze_Tmech_Opt_MMA)
  add_subdirectory(Analyze_Tmech_PNorm_Opt_MMA)
  add_subdirectory(Analyze_LaminarFlowRe100)
  add_subdirectory(Analyze_2Phys_Sym_OC)
  add_subdirectory(Analyze_VolAvgTensile_MMA)
  add_subdirectory(Analyze_Thermomechanics_MMA_IPOPT)

  if( ESP_ENABLED )
    add_subdirectory(Analyze_ParallelESP_MMA)
    IF( ENABLE_PLATO_SERVICES AND DAKOTADRIVER )
      add_subdirectory(Dakota_MDPS)
      add_subdirectory(Dakota_MDPS_PE_Vol)
      add_subdirectory(Dakota_SBGO)
    ENDIF()
  ENDIF()

ENDIF()
