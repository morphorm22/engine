if(ALBANY)
  if(NOT DEFINED ALBANY_BINARY)
    if(NOT DEFINED ALBANY_PATH)
      message(FATAL_ERROR "
       Albany tests are enabled, but both ALBANY_BINARY and ALBANY_PATH are not set. 
       One must be defined in order to enable Albany tests.")
    endif()
    Plato_find_exe(ALBANY_BINARY AlbanyMPMD ${ALBANY_PATH})
    if(NOT DEFINED ALBANY_BINARY)
      message(FATAL_ERROR "
       AlbanyMPMD was not found in ${ALBANY_PATH}")
    endif()
    message("-- Adding Albany tests")
    message("-- Albany MPMD executable: " ${ALBANY_BINARY})
    message("-- ")
  else()
    message("-- ALBANY_BINARY variable already set")
    message(STATUS "Using ${ALBANY_BINARY}")
  endif()
endif()

if(ANALYZE)
  if(NOT DEFINED ANALYZE_BINARY)
    if(NOT DEFINED ANALYZE_PATH)
      message(FATAL_ERROR "
       Analyze tests are enabled, but both ANALYZE_BINARY and ANALYZE_PATH are not set. 
       One must be defined in order to enable Analyze tests.")
    endif()
    Plato_find_exe(ANALYZE_BINARY analyze_MPMD ${ANALYZE_PATH})
    if(NOT DEFINED ANALYZE_BINARY)
      message(FATAL_ERROR "
       analyze_MPMD was not found in ${ANALYZE_PATH}")
    endif()
    message("-- Adding Analyze tests")
    message("-- Analyze MPMD executable: " ${ANALYZE_BINARY})
    message("-- ")
  else()
    message("-- ANALYZE_BINARY variable already set")
    message(STATUS "Using ${ANALYZE_BINARY}")
  endif()
endif()


IF( ANALYZE )
  add_subdirectory(Analyze_Disp_Opt_XMLG)
  add_subdirectory(Analyze_CompMin2D_XMLG)
  add_subdirectory(Analyze_CompMin3D_XMLG)
  add_subdirectory(Analyze_CompMin3D_2Load_XMLG)
  add_subdirectory(Analyze_Helmholtz3D_XMLG)
  add_subdirectory(Analyze_Helmholtz3D_Projection_XMLG)
  add_subdirectory(Analyze_Helmholtz3D_SurfaceLengthScale_XMLG)
  add_subdirectory(Analyze_Helmholtz3D_SurfaceLengthScale_SymmPlane_XMLG)
  add_subdirectory(Analyze_MPCs_Helmholtz_XMLG)
  add_subdirectory(Analyze_Thermoplasticity_XMLG)
  IF ( IPOPT_ENABLED )
  add_subdirectory(Analyze_CompMin3D_MMA_XMLG)
  add_subdirectory(Analyze_Thermomechanics_MMA_IPOPT_XMLG)
  add_subdirectory(Analyze_CompMin3D_2_constraints_XMLG)
  add_subdirectory(Analyze_CompMin3D_MassProp_XMLG)
  add_subdirectory(Analyze_CompMin3D_MultiBlock_XMLG)
  add_subdirectory(Analyze_DisplacementCriterion_XMLG)
  ENDIF()
  add_subdirectory(Analyze_Tmech_Opt_XMLG)
  add_subdirectory(Analyze_Thermal_Opt_XMLG)
  add_subdirectory(Analyze_Uncertain_Load_XMLG)
  add_subdirectory(Analyze_VolAvgTensile_XMLG)
  add_subdirectory(Analyze_2Phys_Sym_XMLG)
  add_subdirectory(Analyze_LaminarFlowRe100_XMLG)
  if( ESP_ENABLED )
    add_subdirectory(Analyze_ParallelESP_XMLG)
    IF( ENABLE_PLATO_SERVICES AND DAKOTADRIVER )
        Plato_find_exe(NUMDIFF_COMMAND numdiff ${NUMDIFF_PATH}/bin)
        add_subdirectory(Dakota_MDPS_XMLG)
        add_subdirectory(Dakota_SBGO_XMLG)
    ENDIF()
  ENDIF()
  IF( ENABLE_ROL )
    add_subdirectory(Analyze_CompMin3D_ROL_LC_XMLG)
    add_subdirectory(Analyze_CompMin3D_ROL_LC_2_XMLG)
    add_subdirectory(Analyze_CompMin3D_ROL_LC_3_XMLG)
    add_subdirectory(Analyze_CompMin3D_ROL_LC_4_XMLG)
    add_subdirectory(Analyze_CompMin3D_ROL_AL_XMLG)
    add_subdirectory(Analyze_Stress_ROL_BC_XMLG)
    add_subdirectory(Analyze_Stress_ROL_BC_XMLG_LBracket)
    add_subdirectory(Analyze_FixedBlocks_DefaultEnforceBounds_XMLG)
    add_subdirectory(Analyze_FixedBlocks_NoEnforceBounds_XMLG)
  ENDIF()
ENDIF()

