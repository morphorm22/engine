if(ALBANY)
  if(NOT DEFINED ALBANY_BINARY)
    if(NOT DEFINED ALBANY_PATH)
      message(FATAL_ERROR "
       Albany tests are enabled, but both ALBANY_BINARY and ALBANY_PATH are not set. 
       One must be defined in order to enable Albany tests.")
    endif()
    Plato_find_exe(ALBANY_BINARY AlbanyMPMD ${ALBANY_PATH})
    if(NOT DEFINED ALBANY_BINARY)
      message(FATAL_ERROR "
       AlbanyMPMD was not found in ${ALBANY_PATH}")
    endif()
    message("-- Adding Albany tests")
    message("-- Albany MPMD executable: " ${ALBANY_BINARY})
    message("-- ")
  else()
    message("-- ALBANY_BINARY variable already set")
    message(STATUS "Using ${ALBANY_BINARY}")
  endif()
endif()

if(ANALYZE)
  if(NOT DEFINED ANALYZE_BINARY)
    if(NOT DEFINED ANALYZE_PATH)
      message(FATAL_ERROR "
       Analyze tests are enabled, but both ANALYZE_BINARY and ANALYZE_PATH are not set. 
       One must be defined in order to enable Analyze tests.")
    endif()
    Plato_find_exe(ANALYZE_BINARY LGR_MPMD ${ANALYZE_PATH})
    if(NOT DEFINED ANALYZE_BINARY)
      message(FATAL_ERROR "
       LGR_MPMD was not found in ${ANALYZE_PATH}")
    endif()
    message("-- Adding Analyze tests")
    message("-- Analyze MPMD executable: " ${ANALYZE_BINARY})
    message("-- ")
  else()
    message("-- ANALYZE_BINARY variable already set")
    message(STATUS "Using ${ANALYZE_BINARY}")
  endif()
endif()


IF( STK_ENABLED )
  add_subdirectory(CreateSupportStructure1)
ENDIF()
add_subdirectory(2Load_OC)
add_subdirectory(2Load_OC_Variables)
add_subdirectory(2Load_absolute_filter_OC)
add_subdirectory(2Load_absolute_volume_OC)
add_subdirectory(2Load_filterPower_OC)
add_subdirectory(2Load_heaviside_OC)
add_subdirectory(2Load_updatingHeaviside_OC)
add_subdirectory(Proxy_Rocket_KSBC)
add_subdirectory(Proxy_Rosenbrock_KSBC)
add_subdirectory(Proxy_Topo2D_KSAL)
add_subdirectory(Proxy_RosenbrockRadius_KSAL)
IF( ENABLE_ROL )
  add_subdirectory(Proxy_AugmentedLagrangian_ROL)
ENDIF()
IF( ANALYZE )
  add_subdirectory(Analyze_CompMin2D_Variables)
  add_subdirectory(Analyze_CompMin2D_MultiPerf)
  add_subdirectory(Analyze_CompMin3D)
  IF( GEOMETRY )
    add_subdirectory(Analyze_CompMin3D_MLS)
    add_subdirectory(Analyze_Mitchell2D_MLS_PE)
    add_subdirectory(Analyze_CompMin2D_Variables_MLS)
  ENDIF()
ENDIF()
IF( PLATO_ENABLE_SERVICES_PYTHON AND EXPY AND GEOMETRY )
  add_subdirectory(GeometryMLS/ComputeMLSField)
  add_subdirectory(GeometryMLS/ComputeMLSField2D)
  add_subdirectory(GeometryMLS/MapFieldToMLSPoints)
  add_subdirectory(GeometryMLS/MapFieldToMLSPoints2D)
  add_subdirectory(GeometryMLS/InitializeMLSPoints)
  IF( ANALYZE )
    add_subdirectory(ComputeGradientX)
    add_subdirectory(Analyze_Mitchell2D_Simp)
    add_subdirectory(Analyze_Mitchell2D_Heaviside)
    add_subdirectory(Analyze_Mitchell2D_MLS)
    add_subdirectory(Analyze_LBracket2D_Heaviside)
    add_subdirectory(Analyze_LBracket2D_MLS)
    add_subdirectory(GeometryMLS/SolveWithMLSField)
    add_subdirectory(GeometryMLS/SolveWithMLSField2D)
  ENDIF()
ENDIF()

add_subdirectory(Albany_2Load_OC)
add_subdirectory(Periodic_BCs)
add_subdirectory(ErrorHandling/AggregatorOutput)
add_subdirectory(ErrorHandling/BogusComm)
add_subdirectory(ErrorHandling/DoublyNestedOperation)
add_subdirectory(ErrorHandling/MissingOperation)
add_subdirectory(ErrorHandling/MultipleOperations)
add_subdirectory(ErrorHandling/StageInputs)
add_subdirectory(ErrorHandling/TwoPerformersOneOperation1)
add_subdirectory(ErrorHandling/TwoPerformersOneOperation2)
add_subdirectory(ErrorHandling/WrongOperationInput1)
add_subdirectory(ErrorHandling/WrongOperationInput2)
add_subdirectory(ErrorHandling/WrongOperationInput3)
add_subdirectory(ErrorHandling/WrongOperationInput4)
add_subdirectory(ErrorHandling/WrongOperationInput5)
add_subdirectory(ErrorHandling/WrongOperationInput6)
add_subdirectory(ErrorHandling/WrongOperationInput7)
