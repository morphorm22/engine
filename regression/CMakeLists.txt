if(ALBANY)
  if(NOT DEFINED ALBANY_BINARY)
    if(NOT DEFINED ALBANY_PATH)
      message(FATAL_ERROR "
       Albany tests are enabled, but both ALBANY_BINARY and ALBANY_PATH are not set. 
       One must be defined in order to enable Albany tests.")
    endif()
    Plato_find_exe(ALBANY_BINARY AlbanyMPMD ${ALBANY_PATH})
    if(NOT DEFINED ALBANY_BINARY)
      message(FATAL_ERROR "
       AlbanyMPMD was not found in ${ALBANY_PATH}")
    endif()
    message("-- Adding Albany tests")
    message("-- Albany MPMD executable: " ${ALBANY_BINARY})
    message("-- ")
  else()
    message("-- ALBANY_BINARY variable already set")
    message(STATUS "Using ${ALBANY_BINARY}")
  endif()
endif()

if(ANALYZE)
  if(NOT DEFINED ANALYZE_BINARY)
    if(NOT DEFINED ANALYZE_PATH)
      message(FATAL_ERROR "
       Analyze tests are enabled, but both ANALYZE_BINARY and ANALYZE_PATH are not set. 
       One must be defined in order to enable Analyze tests.")
    endif()
    Plato_find_exe(ANALYZE_BINARY analyze_MPMD ${ANALYZE_PATH})
    if(NOT DEFINED ANALYZE_BINARY)
      message(FATAL_ERROR "
       analyze_MPMD was not found in ${ANALYZE_PATH}")
    endif()
    message("-- Adding Analyze tests")
    message("-- Analyze MPMD executable: " ${ANALYZE_BINARY})
    message("-- ")
  else()
    message("-- ANALYZE_BINARY variable already set")
    message(STATUS "Using ${ANALYZE_BINARY}")
  endif()
endif()

IF( STK_ENABLED )
  add_subdirectory(CreateSupportStructure1)
  add_subdirectory(CreateSupportStructure2)
  add_subdirectory(CreateSupportStructure3)
  add_subdirectory(CreateSupportStructure4)
  add_subdirectory(CreateSupportStructure5)
  add_subdirectory(CreateSupportStructure6)
  add_subdirectory(CreateSupportStructure7)
  add_subdirectory(CreateSupportStructure8)
  add_subdirectory(2Load_OC_Restart)
ENDIF()
add_subdirectory(Su2ToExodus1)
if( ENABLE_ROL )
  add_subdirectory(2Load_ROL)
  add_subdirectory(2Load_ROL_FinalWrite)
  add_subdirectory(2Load_ROL_Variables)
  add_subdirectory(2Load_filterPower_ROL)
  add_subdirectory(2Load_heaviside_ROL)
endif()
add_subdirectory(2Load_absolute_filter_OC)
add_subdirectory(2Load_absolute_volume_OC)
add_subdirectory(2Load_updatingHeaviside_OC)
add_subdirectory(2Load_updatingTANH_OC)
if( PLATOPROXY )
add_subdirectory(Proxy_Rosenbrock_BCPSO)
#add_subdirectory(Proxy_Topo2D_MMA)
add_subdirectory(Proxy_RosenbrockRadius_ROL)
add_subdirectory(Proxy_Himmelblau_ShiftedEllipse_ALPSO)
  IF( ENABLE_ROL )
    add_subdirectory(Proxy_Rocket_ROL_BC)
    add_subdirectory(Proxy_Rosenbrock_ROL_BC)
    add_subdirectory(Proxy_Topo2D_ROL_KSAL)
	if(EXPY)
    add_subdirectory(GradientCheck/GC_Proxy_Rosenbrock_ROL_BC)
    add_subdirectory(GradientCheck/GC_Proxy_Rocket_ROL_BC)
	endif()
  ENDIF()
ENDIF()
IF( ANALYZE )
  add_subdirectory(Analyze_CompMin2D_Variables)
  add_subdirectory(Analyze_CompMin2D_MultiPerf)
  add_subdirectory(Analyze_LBracket3D_Inqlty)
  add_subdirectory(Analyze_LBracket3D_Eqlty)
  add_subdirectory(Analyze_CompMin2D)
  add_subdirectory(Analyze_CompMin3D)
  ## until PA Custom Materials are re-enabled
  # add_subdirectory(Analyze_CompMin3D_GPSR)
#  add_subdirectory(Analyze_CompMin3D_MMA)
  add_subdirectory(Analyze_HeatEq3D_Norm)
  add_subdirectory(Analyze_ProcessAware_Elastic)
  # add_subdirectory(Analyze_TransMech_Opt)
  ## until PA fluids is re-enabled
  # add_subdirectory(Analyze_NaturalConvectionGr1e3)
  IF( ENABLE_ROL )
  ## until Tacho works with non-SPD problems
    # add_subdirectory(Analyze_Tmech_Opt_Tet4)
    # add_subdirectory(Analyze_Tmech_Opt_Expr_Tet4)
    # add_subdirectory(Analyze_Tmech_Opt_Tet10)
    # add_subdirectory(Analyze_Tmech_Opt_Hex8)
    # add_subdirectory(Analyze_Tmech_Opt_Hex27)

    add_subdirectory(Analyze_CompMin3D_BodyLoads)
	  add_subdirectory(GradientCheck/GC_Analyze_BodyLoads)
    add_subdirectory(GradientCheck/GC_Analyze_Disp_MagInDirection)
    add_subdirectory(GradientCheck/GC_Analyze_Disp_SolutionInDirection)
    add_subdirectory(GradientCheck/GC_Analyze_Disp_TargetMagnitude)
    add_subdirectory(GradientCheck/GC_Analyze_Disp_TargetSolution)
    add_subdirectory(GradientCheck/GC_Analyze_Disp_TargetSolutionVector)
	  add_subdirectory(GradientCheck/GC_Analyze_HeatEq3D)
    add_subdirectory(GradientCheck/GC_Analyze_Emech)
    add_subdirectory(GradientCheck/GC_Analyze_Tmech)
    add_subdirectory(GradientCheck/GC_Analyze_Tmech_PNorm)
    add_subdirectory(GradientCheck/GC_Analyze_IS)
    add_subdirectory(GradientCheck/GC_Analyze_StabMech)
    add_subdirectory(GradientCheck/GC_Analyze_TransMech)
    add_subdirectory(GradientCheck/GC_Analyze_TransMechDamped)
    add_subdirectory(GradientCheck/GC_Analyze_TransMechTDBCs)
    add_subdirectory(GradientCheck/GC_Analyze_TransientTM)
    add_subdirectory(GradientCheck/GC_Analyze_MPCs)
    ## until Tacho works with non-SPD problems
    # add_subdirectory(GradientCheck/GC_Analyze_Tmech_Opt_Tet4)
    # add_subdirectory(GradientCheck/GC_Analyze_Tmech_Opt_Expr_Tet4)

    if( EXPY )
      add_subdirectory(utility)

      # Newer-style regression tests that check serialization of object state
      add_subdirectory(serialized/Analyze_VolAvgTensile_Serialized)
      add_subdirectory(serialized/Analyze_2Phys_Sym_Serialized)
      add_subdirectory(serialized/Analyze_CompMin3D_2Load1Perfomer_Serialized)
      #DISABLE add_subdirectory(serialized/Analyze_Thermomechanics_Serialized) # Disabled until thermomechanics is back on
      add_subdirectory(serialized/Analyze_CompMin3D_MassProp_Serialized)
      add_subdirectory(serialized/Analyze_CompMin3D_MultiBlock_Serialized)
      add_subdirectory(serialized/Analyze_DisplacementCriterion_Serialized)
      #DISABLE add_subdirectory(serialized/Analyze_GreaterThan_Serialized)
      #DISABLE add_subdirectory(serialized/Analyze_ShapeTopo_Serialized)
    endif()

  ENDIF()
  IF( GEOMETRY AND ANALYZE_HAS_HEAVISIDE )
    add_subdirectory(Analyze_CompMin3D_MLS)
    add_subdirectory(Analyze_Mitchell2D_MLS_PE)
    add_subdirectory(Analyze_CompMin2D_Variables_MLS)
  ENDIF()
  if( ESP_ENABLED )
    add_subdirectory(ESP_gradients/ESP_DXDp)
    add_subdirectory(ESP_gradients/ESP_DfDX_volume)
    add_subdirectory(ESP_gradients/ESP_DfDX_compliance)
    add_subdirectory(ESP_gradients/ESP_DfDp)

    IF( IPOPT_ENABLED )
      add_subdirectory(Analyze_ShapeTopo)
    ENDIF()
    IF( ENABLE_PLATO_SERVICES AND DAKOTADRIVER )
        add_subdirectory(XMLOutput/Dakota_MDPS)
        add_subdirectory(XMLOutput/Dakota_MDPS_Gemma)
        IF ( SIERRA_TESTS_ENABLED )
          add_subdirectory(Morph_DakotaMDPS)
        ENDIF()
    ENDIF()
  ENDIF()
  IF( PLATO_TPETRA )
    add_subdirectory(Analyze_CompMin3D_Belos)
  ENDIF()
ENDIF()
IF( GEOMETRY )
  add_subdirectory(GeometryCogent/Octet)
ENDIF()

IF( ENABLE_PRUNE )
  add_subdirectory(PruneAndRefine/PruneAndRefine1)
  add_subdirectory(PruneAndRefine/PruneAndRefine2)
  add_subdirectory(PruneAndRefine/PruneAndRefine3)
  add_subdirectory(PruneAndRefine/PruneAndRefine4)
  add_subdirectory(PruneAndRefine/PruneAndRefine5)
  add_subdirectory(PruneAndRefine/PruneAndRefine6)
  add_subdirectory(PruneAndRefine/PruneAndRefine7)
  add_subdirectory(PruneAndRefine/PruneAndRefine8)
  add_subdirectory(PruneAndRefine/PruneAndRefine9)
  add_subdirectory(PruneAndRefine/PruneAndRefine10)
  add_subdirectory(PruneAndRefine/PruneAndRefine11)
  add_subdirectory(PruneAndRefine/PruneAndRefine12)
  add_subdirectory(PruneAndRefine/PruneAndRefine13)
  add_subdirectory(PruneAndRefine/PruneAndRefine14)
  add_subdirectory(PruneAndRefine/PruneAndRefine15)
  add_subdirectory(PruneAndRefine/PruneAndRefine16)
  add_subdirectory(PruneAndRefine/PruneAndRefine17)
  add_subdirectory(PruneAndRefine/PruneAndRefine18)
  add_subdirectory(PruneAndRefine/PruneAndRefine19)
  add_subdirectory(PruneAndRefine/PruneAndRefine20)
  add_subdirectory(PruneAndRefine/PruneAndRefineThreshold1)
  add_subdirectory(PruneAndRefine/PruneAndRefineThreshold2)
ENDIF()

IF( PLATO_ENABLE_SERVICES_PYTHON AND EXPY AND GEOMETRY )
  find_package(Python3 COMPONENTS Development Interpreter)
  add_subdirectory(GeometryMLS/ComputeMLSField)
  add_subdirectory(GeometryMLS/ComputeMLSField2D)
  add_subdirectory(GeometryMLS/MapFieldToMLSPoints)
  add_subdirectory(GeometryMLS/MapFieldToMLSPoints2D)
  add_subdirectory(GeometryMLS/InitializeMLSPoints)
  add_subdirectory(GeometryCogent/Cylinder_Tet)
  add_subdirectory(GeometryCogent/Cylinder_Hex)
  add_subdirectory(GeometryCogent/Brick)
  add_subdirectory(GeometryCogent/5Bolt)
  IF( ANALYZE )
    add_subdirectory(ComputeGradientX)
    add_subdirectory(ComputeGradientX_ADBC)
    add_subdirectory(ComputeGradientX_StabMech)
    add_subdirectory(Analyze_Mitchell2D_Simp)
    add_subdirectory(GeometryMLS/SolveWithMLSField)
    add_subdirectory(GeometryMLS/SolveWithMLSField2D)
    IF( ANALYZE_HAS_HEAVISIDE)
      add_subdirectory(Analyze_Mitchell2D_Heaviside)
      add_subdirectory(Analyze_Mitchell2D_MLS)
      add_subdirectory(Analyze_LBracket2D_Heaviside)
      add_subdirectory(Analyze_LBracket2D_MLS)
    ENDIF()
    IF( ESP_ENABLED )
      add_subdirectory(Analyze_IS_ESP)
      add_subdirectory(Analyze_CSMFit)
    ENDIF()
  ENDIF()
ENDIF()

add_subdirectory(Albany_2Load_OC)
add_subdirectory(Periodic_BCs)
add_subdirectory(ErrorHandling/AggregatorOutput)
add_subdirectory(ErrorHandling/BogusComm)
add_subdirectory(ErrorHandling/DoublyNestedOperation)
add_subdirectory(ErrorHandling/MissingOperation)
add_subdirectory(ErrorHandling/MultipleOperations)
add_subdirectory(ErrorHandling/StageInputs)
add_subdirectory(ErrorHandling/TwoPerformersOneOperation1)
add_subdirectory(ErrorHandling/TwoPerformersOneOperation2)
add_subdirectory(ErrorHandling/WrongOperationInput1)
add_subdirectory(ErrorHandling/WrongOperationInput2)
add_subdirectory(ErrorHandling/WrongOperationInput3)
add_subdirectory(ErrorHandling/WrongOperationInput4)
add_subdirectory(ErrorHandling/WrongOperationInput5)
add_subdirectory(ErrorHandling/WrongOperationInput6)
add_subdirectory(ErrorHandling/WrongOperationInput7)
